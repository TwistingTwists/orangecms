<.page class="bg-muted">
  <div class="mx-auto w-full max-w-2xl">
    <.header>
      <div class="flex items-center gap-2">
        Content types / <%= @content_type.name %>
        <.link navigate={scoped_path(assigns, "/content/#{@content_type.key}")}>
          <.tooltip>
            <.icon
              class="text-muted-foreground h-5 w-5 hover:text-foreground"
              name="arrow-top-right-on-square"
            />
            <.tooltip_content position="right" class="whitespace-nowrap">
              View content
            </.tooltip_content>
          </.tooltip>
        </.link>
      </div>
    </.header>

    <.card class="mt-8 p-6">
      <.tabs default="frontmatter" id="settings">
        <.tabs_list class="grid grid-cols-3 gap-2">
          <.tabs_trigger root="settings" value="general" class="hover:bg-background/60">
            General
          </.tabs_trigger>
          <.tabs_trigger root="settings" value="image-settings" class="hover:bg-background/60">
            Image settings
          </.tabs_trigger>
          <.tabs_trigger root="settings" value="frontmatter" class="hover:bg-background/60">
            Frontmatter
          </.tabs_trigger>
        </.tabs_list>
        <.tabs_content value="general" class="p-6">
          <.form :let={f} for={@form} phx-submit="save" class="space-y-4">
            <.form_item field={f[:name]} label="Name">
              <Input.input type="text" field={f[:name]} placeholder="Name" />
            </.form_item>

            <.form_item field={f[:key]} label="Key">
              <Input.input type="text" field={f[:key]} placeholder="Key" />
            </.form_item>

            <div class="mt-4 flex">
              <.button type="submit" class="btn-secondary btn-md ml-auto" icon="inbox-arrow-down">
                Save
              </.button>
            </div>
          </.form>
        </.tabs_content>

        <.tabs_content value="image-settings" class="p-6">
          <.form :let={f} for={@form} phx-submit="save" phx-change="validate" class="space-y-4">
            <.inputs_for :let={field} field={f[:github_config]}>
              <.form_item
                field={field[:upload_dir]}
                label="Upload directory"
                description="Where you want to store images"
              >
                <Input.input field={field[:upload_dir]} placeholder="Ex: /public/assets" />
              </.form_item>

              <.form_item
                field={field[:serve_at]}
                label="Serve at"
                description="path where you want to serve images"
              >
                <Input.input field={field[:serve_at]} placeholder="Ex: /static" />
              </.form_item>

              <.form_item>
                <div>
                  <.checkbox field={field[:use_raw_link]} id="raw-link" />
                  <.label for="raw-link">Use raw link</.label>
                </div>
                <.form_description>
                  Using raw file url eg:
                  <code class="text-primary italic">https://raw.githubcontent.xxxxx</code>
                  instead of relative path to uploaded files
                </.form_description>
              </.form_item>
            </.inputs_for>
            <div class="mt-4 flex">
              <.button type="submit" class="btn-secondary btn-md ml-auto" icon="inbox-arrow-down">
                Save
              </.button>
            </div>
          </.form>
        </.tabs_content>
        <.tabs_content value="frontmatter">
          <.form
            :let={f}
            for={@form}
            phx-submit="save"
            phx-change="validate"
            class="mt-6 space-y-6"
            id="schema-form"
          >
            <div
              phx-hook="Sortable"
              phx-event="save_field_order"
              id="schema-fields"
              class="space-y-6"
            >
              <.inputs_for :let={field} field={f[:frontmatter_schema]}>
                <% id = OrangeCmsWeb.Components.LadUI.Helpers.generate_id()
                key = Phoenix.HTML.Form.input_value(field, :key) %>
                <.collapsible id={id} class="group" open={true} data-id={key}>
                  <div class="flex cursor-pointer gap-2 text-sm font-semibold">
                    <.collapsible_trigger root={id} class="flex flex-1 gap-2">
                      <Heroicons.plus class="h-5 w-5 text-gray-400 transition duration-300 group-open:hidden" />
                      <Heroicons.minus class="hidden h-5 w-5 text-gray-400 transition duration-300 group-open:block" />
                      <span><%= field[:name].value || field[:key].value %></span>
                    </.collapsible_trigger>
                    <span class="btn btn-ghost btn-sm">
                      <Heroicons.bars_2 class="h-4 w-4" />
                    </span>
                  </div>

                  <.collapsible_content>
                    <.card class="mt-2 p-4">
                      <div class="flex gap-2">
                        <div class="grid grow grid-cols-12 gap-2">
                          <div class="col-span-4">
                            <.form_item label="Key" field={field[:key]}>
                              <Input.input field={field[:key]} phx-debounce="blur" />
                            </.form_item>
                          </div>

                          <div class="col-span-4">
                            <.form_item label="Data type" field={field[:type]}>
                              <.simple_select
                                field={field[:type]}
                                options={OrangeCms.Content.InputType.values()}
                                phx-change={%JS{}}
                                class="w-full"
                              />
                            </.form_item>
                          </div>

                          <div class="col-span-4">
                            <%= if field[:type].value  in [:checkbox, :select, :array] do %>
                              <.form_item label="Options" field={field[:option_str]}>
                                <Input.input
                                  field={field[:options_str]}
                                  placeholder="Separated by commas"
                                />
                              </.form_item>
                            <% else %>
                              <.form_item label="Default value" field={field[:default_value]}>
                                <Input.input field={field[:default_value]} />
                              </.form_item>
                            <% end %>
                          </div>
                        </div>

                        <div class="mt-2 flex items-center">
                          <a
                            href="#"
                            class="btn-action text-destructive ml-auto flex gap-2 text-xs"
                            phx-click="remove_field"
                            phx-value-index={field.index}
                            data-confirm="Are you sure?"
                          >
                            <Heroicons.trash class="h-4 w-4" />
                          </a>
                        </div>
                      </div>
                    </.card>
                  </.collapsible_content>
                </.collapsible>
              </.inputs_for>
            </div>

            <div class="mt-3">
              <.button
                phx-click="add_field"
                phx-value-path={f[:frontmatter_schema].name}
                type="button"
                variant="secondary"
                size="sm"
              >
                + Add field
              </.button>
            </div>

            <div class="mt-4 flex">
              <.button type="submit" class="btn-secondary btn-md ml-auto" icon="inbox-arrow-down">
                Save
              </.button>
            </div>
          </.form>
        </.tabs_content>
      </.tabs>
    </.card>
    <.back navigate={scoped_path(assigns, "/content_types")}>Back to content_types</.back>
  </div>
</.page>
